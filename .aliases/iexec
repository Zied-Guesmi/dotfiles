#!/bin/sh

# init
alias ii="iexec init" # create all files necessary to get started

# wallet    [ --chain <chainName> | --to <address> | --force | --hub <address> |--password <password> ]
alias iw="iexec wallet"
alias iwc="iexec wallet create"
alias iwdec="iexec wallet decrypt"        # --password <password> # save wallet.json from encrypted-wallet.json
alias iwenc="iexec wallet encrypt"        # --password <password> # save encrypted-wallet.json from wallet.json
alias iweth="iexec wallet getETH"
alias iwrlc="iexec wallet getRLC"
alias iwseth="iexec wallet sendETH"       # <amount> --to <eth_address>
alias iwsrlc="iexec wallet sendRLC"       # <amount> --to <eth_address>
alias iws="iexec wallet show"             # [address] optional to show other people's wallet
alias iwsw="iexec wallet sweep"           # --to <eth_address> drain all ETH and RLC, sending them back to iExec faucet by default

# account   [ --chain <chainName> | --force | --hub <address> ]
alias ial="iexec account login"
alias ias="iexec account show"            # [address] optional to show other people's account
alias iad="iexec account deposit"         # <amount>
alias iaw="iexec account withdraw"        # <amount>

# app   [ --chain <chainName> | --hub <address> | --user <address> ]
alias iac"iexec app count"                # --user <userAddress> count user total number of app
alias iad="iexec app deploy"              # deploy new app
alias iai="iexec app init"                # init new app
alias ias="iexec app show"                # [address|index] show app details

# dataset   [ --chain <chainName> | --hub <address> | --user <address> ]
alias idc="iexec dataset count"           # --user <userAddress> count user total number of dataset
alias idd="iexec dataset deploy"          # deploy new dataset
alias idi="iexec dataset init"            # init new app
alias ids="iexec dataset show"            # [address|index] show dataset details

# workerpool    [ --chain <chainName> | --hub <address> | --user <address> ]
alias iwi="iexec workerpool init"         # init new workerpool
alias iwd="iexec workerpool deploy"       # deploy new workerpool
alias iws="iexec workerpool show"         # [address|index] show workerpool details
alias iwc="iexec workerpool count"        # --user <userAddress> count user total number of workerpool

# orderbook   [ --chain <chainName> | --category [ID] | --pool [address] ]
alias iobs="iexec orderbook show --category"       # show orderbook for category 5

# order   [ --chain <chainName> | --hub <address> | --sell | --buy | --force ]
alias ioib="iexec order init --buy"       # init new buy order
alias iois="iexec order init --sell"      # init new sell order
alias iop="iexec order place"             # place an order at limit price
alias ios="iexec order show"              # <orderID> show an order
alias iof="iexec order fill"              # <orderID> fill an order at market price and start work execution
alias ioc="iexec order cancel"            # <orderID> cancel an order
alias ioc="iexec order count"             # count marketplace total number of order

# work    [ --chain <chainName> | --watch | --download [fileName] ]
alias iws="iexec work show"               # <address> show a work, watch its status changes and download it when completed

# category    [ --chain <chainName> | --hub <address> ]
alias ici="iexec category init"           # init new category
alias icc="iexec category create"         # create new category
alias ics="iexec category show"           # <index> show category details by index
alias icco="iexec category count"         # count hub total number of category

# upgrade
alias iu="iexec upgrade"                  # check if using latest iExec SDK version

# scheduler
alias iss="iexec scheduler show"          # show scheduler details
alias isp="iexec scheduler api"           # direct call of scheduler API methods
